var relearn_searchindex = [
  {
    "breadcrumb": "420113 - Notes",
    "content": "🧰 Désassemblage d’un ordinateur Ce chapitre explique comment démonter un ordinateur de manière sécuritaire et méthodique, étape par étape. Ouvrir le boîtier, retirer la carte graphique, les disques, la mémoire, jusqu’à la carte-mère : chaque composant est abordé. L’objectif est de comprendre l’architecture interne d’un PC, tout en évitant les erreurs courantes. Ce processus est indispensable pour tout technicien ou passionné souhaitant entretenir, réparer ou faire évoluer une machine.\n🖥️ La carte-mère La carte-mère est le composant central d’un ordinateur. Elle permet la communication entre le processeur, la mémoire, les disques, les ports USB et bien d’autres périphériques. Sa taille, ses connecteurs, son socket pour CPU, sa compatibilité avec la RAM ou encore ses ports d’extension (PCIe, SATA, USB…) sont autant d’éléments clés qui déterminent les possibilités et les performances d’un PC.\nDans ce chapitre, on explore :\nLes formats de cartes-mères (ATX, Mini ITX, etc.) Le rôle du chipset, des composants électroniques, et de l’alimentation La compatibilité CPU / socket Les différents types de RAM et leurs limites Les nombreux ports (PCIe, SATA, USB, VGA…) intégrés à la carte 👉 Une bonne compréhension de la carte-mère est essentielle pour assembler, diagnostiquer ou faire évoluer un ordinateur.",
    "description": "🧰 Désassemblage d’un ordinateur Ce chapitre explique comment démonter un ordinateur de manière sécuritaire et méthodique, étape par étape. Ouvrir le boîtier, retirer la carte graphique, les disques, la mémoire, jusqu’à la carte-mère : chaque composant est abordé. L’objectif est de comprendre l’architecture interne d’un PC, tout en évitant les erreurs courantes. Ce processus est indispensable pour tout technicien ou passionné souhaitant entretenir, réparer ou faire évoluer une machine.\n🖥️ La carte-mère La carte-mère est le composant central d’un ordinateur. Elle permet la communication entre le processeur, la mémoire, les disques, les ports USB et bien d’autres périphériques. Sa taille, ses connecteurs, son socket pour CPU, sa compatibilité avec la RAM ou encore ses ports d’extension (PCIe, SATA, USB…) sont autant d’éléments clés qui déterminent les possibilités et les performances d’un PC.",
    "tags": [],
    "title": "Matériel",
    "uri": "/113/materiel/index.html"
  },
  {
    "breadcrumb": "420113 - Notes \u003e Matériel",
    "content": "Instruction Mettre le bracelet antistatique Allez-y douuuuuuucement Déposer les pièces sur une surface propre et dégagée comptez les vis Le capot Le capot d’un ordinateur est la partie externe du boîtier qui sert de protection. Il recouvre les composants internes (carte mère, disque dur, etc.) et peut être retiré pour permettre l’entretien ou les modifications du matériel.\nLe grille La grille d’un ordinateur est une ouverture située sur le boîtier. Elle permet la circulation de l’air pour refroidir les composants internes tout en empêchant les poussières et objets de pénétrer.\nLecteur DVD Permet la lecture de DVD…\nVentilateur et dissipateur Le ventilateur est un composant qui fait circuler l’air pour évacuer la chaleur produite par les autres pièces de l’ordinateur.\nLe dissipateur (ou dissipateur thermique) est une pièce en métal fixée sur des composants comme le processeur, qui absorbe et diffuse la chaleur. Le ventilateur et le dissipateur fonctionnent souvent ensemble pour assurer un bon refroidissement.\nBaie de stockage et disque La baie de stockage est un emplacement dans le boîtier de l’ordinateur conçu pour accueillir des disques de stockage (HDD, SSD).\nLe disque (ou disque dur/SSD) est le composant qui stocke les données (système, fichiers, logiciels) de manière permanente.\nRam La RAM (mémoire vive) est une mémoire temporaire qui stocke les données en cours d’utilisation par le processeur. Elle permet à l’ordinateur d’être rapide et réactif, mais son contenu est effacé à chaque redémarrage.\nLa carte mère La est la pièce principale de l’ordinateur. Elle connecte et fait communiquer tous les composants (processeur, RAM, disque, carte graphique, etc.) entre eux. C’est le centre nerveux du système.\nCPU Le CPU (ou processeur) est le cerveau de l’ordinateur. Il exécute les instructions et effectue tous les calculs nécessaires au fonctionnement des logiciels et du système.\nBloc d’alimentation Le bloc d’alimentation (ou PSU) fournit l’énergie électrique à tous les composants de l’ordinateur. Il transforme le courant secteur en tensions adaptées pour chaque pièce (carte mère, disque, etc.).",
    "description": "Instruction Mettre le bracelet antistatique Allez-y douuuuuuucement Déposer les pièces sur une surface propre et dégagée comptez les vis Le capot Le capot d’un ordinateur est la partie externe du boîtier qui sert de protection. Il recouvre les composants internes (carte mère, disque dur, etc.) et peut être retiré pour permettre l’entretien ou les modifications du matériel.",
    "tags": [],
    "title": "Désassemblage",
    "uri": "/113/materiel/desassemblage/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "Que se passe-t-il au démarrage d’un ordinateur?\nLe démarrage est divisé en deux phases.\nPremière phase Lorsque le courant électrique atteint le CPU, celui-ci exécute le code qui se trouve dans la puce BIOS (“Basic Input-Output System). Le BIOS effectue des tests matériels de base (POST, “Power On Self-Test”). L’utilisateur peut à ce moment intervenir pour accéder aux options de configuration ou de démarrage du BIOS. Le BIOS lit une section spécifique du disque (MBR, “Master Boot Record”) qui contient la liste des partitions et les instructions pour démarrer le système d’exploitation. Ces instructions sont en fait un programme qu’on nomme Bootloader; il est possible de modifier le bootloader d’un système si on veut disposer de plus d’options au démarrage, notamment la possibilité de démarrer différentes version d’un même SE, ou encore des SE différents. Le bootloader lit sur le disque le fichier correspondant au noyau du SE à démarrer, le met en mémoire et lance son exécution. Deuxième phase Chargement des pilotes des différents périphériques Montage du système de fichiers Lancement des différents programmes du SE Accès au BIOS HP ProDesk 400 G3 Pour accéder aux fonctionnalités du BIOS il faut appuyer sur des touches spécifiques au moment du démarrage, sinon le SE sera chargé directement. Ces touches peuvent varier selon le fabricant du PC; dans le cas de HP elles sont les suivantes:\nTouche Fonction F1 Aide générale F3 Aide contextuelle (si disponible) F9 Options de démarrage F10 Options de configuration F11 Restauration du système F12 Démarrage PXE (réseau) Onglet Principal Donne accès aux informations matérielles sur le PC, aux outils de diagnostics et de réinitialisation. C’est également ici que l’on doit régler l’horloge lorsqu’on réinitialise le système par CMOS.\nOnglet Sécurité Les éléments principaux ici touchent à l’utilisation de mots de passe.\nOn peut changer le mot de passe pour démarrer le PC, le mot de passe du BIOS, et définir des critères de complexité pour ces mots de passe.\nRéinitialisation du mot de passe d’administrateur Sur les PC du parc informatique d’une organisation, le BIOS est généralement protégé par mot de passe: c’est le cas avec nos PC. Pour permettre un accès au BIOS sans mot de passe, on doit enlever le cavalier (“jumper”) correspondant sur la carte-mère.\nEnsuite, démarrez le PC et appuyez sur F10 immédiatement. Vous arriverez à la configuration du BIOS; utilisez les flèches pour accéder à l’onglet Sécurité:\nEn sélectionnant Création du mot de passe administrateur BIOS, on vous demande de remettre en place le cavalier. Ensuite, redémarrez le PC et entrez une nouvelle fois dans le BIOS. Cette fois-ci, vous pourrez changer le mot de passe.\nRedémarrez encore le PC puis accédez au BIOS. On vous demandera un mot de passe; entrez celui que vous avez créé.\nRéinitialisation du mot de passe POST La procédure est la même que pour le mot de passe BIOS, mais attention: si vous enlevez à nouveau le cavalier vous perdrez le mot de passe BIOS. En effet le cavalier efface les deux mots de passe (BIOS et POST).\nRéinitialisation du CMOS Pour réinitialiser tous les paramètres du BIOS (mais pas les mots de passe), la procédure est la suivante:\nÉteindre le PC, puis le déconnecter. Ensuite, appuyez sur le bouton de démarrage pour vider complètement le bloc d’alimentation. Appuyez 5 secondes sur le bouton CMOS: Rebranchez puis redémarrez le PC. Vous devrez redémarrer plusieurs fois: étant donné la réinitialisation du BIOS le système détectera quelques erreurs. Accédez au BIOS puis réglez l’horloge en allant dans Main -­\u003e Change Date and Time. Paramètres avancés Cette section permet de configurer la plupart des paramètres matériels du PC.\nBoot Options : Configuration de la séquence d’amorçage Une des fonctionnalités du BIOS qui est souvent utilisée est de modifier l’ordre de démarrage: c’est la liste de périphériques que le BIOS inspectera à la recherche d’un système d’exploitation à démarrer (le BIOS démarre le premier SE qu’il détecte). Ainsi, si on met le port USB avant le disque dur dans la séquence, il sera possible de démarrer à partir d’un SE se trouvant sur une clé USB.\nAllez dans la section Advanced puis Boot Options, et descendez la liste jusqu’à UEFI Boot Order:\nVous pouvez monter ou descendre un périphérique dans la liste avec les flèches sur le clavier.\nSystem Options Permet d’activer divers paramètres du CPU et les ports PCI EXpress de la carte-mère.\nBuilt-in Device Options Permet d’activer ou certains périphériques de la carte-mère, notamment le haut-parleur des “bips” système.\nPort Options Permet d’activer ou désactiver les différents ports (SATA, USB, série…) de la carte-mère.\nExercice Configurez le système conformément aux paramètres suivants:\nDVD absent de la séquence de démarrage Langue et clavier français Horloge à la bonne heure Mot de passe: 1x2y3z! “Bip” système désactivé",
    "description": "Que se passe-t-il au démarrage d’un ordinateur?\nLe démarrage est divisé en deux phases.\nPremière phase Lorsque le courant électrique atteint le CPU, celui-ci exécute le code qui se trouve dans la puce BIOS (“Basic Input-Output System). Le BIOS effectue des tests matériels de base (POST, “Power On Self-Test”). L’utilisateur peut à ce moment intervenir pour accéder aux options de configuration ou de démarrage du BIOS. Le BIOS lit une section spécifique du disque (MBR, “Master Boot Record”) qui contient la liste des partitions et les instructions pour démarrer le système d’exploitation. Ces instructions sont en fait un programme qu’on nomme Bootloader; il est possible de modifier le bootloader d’un système si on veut disposer de plus d’options au démarrage, notamment la possibilité de démarrer différentes version d’un même SE, ou encore des SE différents. Le bootloader lit sur le disque le fichier correspondant au noyau du SE à démarrer, le met en mémoire et lance son exécution. Deuxième phase Chargement des pilotes des différents périphériques Montage du système de fichiers Lancement des différents programmes du SE Accès au BIOS HP ProDesk 400 G3 Pour accéder aux fonctionnalités du BIOS il faut appuyer sur des touches spécifiques au moment du démarrage, sinon le SE sera chargé directement. Ces touches peuvent varier selon le fabricant du PC; dans le cas de HP elles sont les suivantes:",
    "tags": [],
    "title": "BIOS",
    "uri": "/113/bios/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "Définition: Se dit de toute unité constituante d’un système informatique, distincte de l’unité de traitement et de la mémoire centrale.\nType de périphériques Regarder le flux d’information!\nPériphérique d’entrée : L’information provient du périphérique vers l’ordinateur.\nPériphérique de sortie: L’information provient de l’ordinateur vers le périphérique.\nPériphérique d’entrée et de sortie: L’information circule dans les 2 sens.\nPériphérique de communication : Permet l’échange d’information entre 2 ordinateurs. Périphérique de stockage : Permet le stockage d’information. Etc. Mémoire (SSD,HDD) Terme important NVMe : C’est une interface conçue spécialement pour les SSD. Elle est plus rapide que SATA. Sur une base théorique NVMe a un potentiel de 3 000 000 IOPs (opération d’entrées/sorties par seconde) vs 150 000 pour SATA. En pratique, La différence est moins grande, mais le potentiel de NVMe reste beaucoup plus grand.\nM.2 : Signifie que le périphérique viendra se brancher directement sur la carte mère dans un port PCIe.\nVolatile et non-volatile : Une mémoire volatile perd les information stocké lorsqu’on lui retire volontairement ou pas l’électricité. Une mémoire non-volatile ne perdra pas les information stocké à moins d’une corruption des données ou d’un malfonctionnement interne.\nMémoire non-volatile en ordre théorique de rapidité. SSD M.2\nSSD M.2 NVMe",
    "description": "Définition: Se dit de toute unité constituante d’un système informatique, distincte de l’unité de traitement et de la mémoire centrale.\nType de périphériques Regarder le flux d’information!\nPériphérique d’entrée : L’information provient du périphérique vers l’ordinateur.\nPériphérique de sortie: L’information provient de l’ordinateur vers le périphérique.\nPériphérique d’entrée et de sortie: L’information circule dans les 2 sens.\nPériphérique de communication : Permet l’échange d’information entre 2 ordinateurs. Périphérique de stockage : Permet le stockage d’information. Etc. Mémoire (SSD,HDD) Terme important NVMe : C’est une interface conçue spécialement pour les SSD. Elle est plus rapide que SATA. Sur une base théorique NVMe a un potentiel de 3 000 000 IOPs (opération d’entrées/sorties par seconde) vs 150 000 pour SATA. En pratique, La différence est moins grande, mais le potentiel de NVMe reste beaucoup plus grand.",
    "tags": [],
    "title": "Péripherique",
    "uri": "/113/peripherique/index.html"
  },
  {
    "breadcrumb": "420113 - Notes \u003e Matériel",
    "content": "La carte-mère d’un ordinateur est un circuit imprimé de taille relativement grande qui permet la communication entre les différents périphériques. Certains de ceux-ci peuvent être directement soudés sur elle, mais elle dispose de nombreux ports et emplacements permettant d’en ajouter d’autres selon nos besoins.\nFacteur de forme Les PC, serveurs et autres ordinateurs peuvent avoir différentes tailles; ainsi les dimensions d’une carte-mère sont déterminées par la taille et les proportions du boîtier. Ces tailles sont standardisées; en voici quelques unes parmi les plus courantes:\nNom Dimensions (mm) Usage ATX 205 x 244 Ordinateurs personnels génériques; le format le plus répandu BTX 325 x 267 Ordinateurs personnels génériques; devait succéder à ATX mais n’a pas eu le succès souhaité CEB 305 x 267 Serveurs EEB 305 x 330 Serveurs Micro ATX 244 x 244 Ordinateurs de bureau Mini ITX 170 x 170 Ordinateurs de bureau et “mini-PC” Alimentation Le bloc d’alimentation doit subvenir aux besoins de toutes les composantes. Certaines d’entre elles reçoivent leur alimentation via la carte-mère (par exemple, la mémoire, les ports USB, etc.), mais d’autres doivent parfois être directement branchées sur le bloc d’alimentation (notamment les disques et certaines cartes graphiques). Ainsi, le nombre et le type de ses connecteurs et sa puissance totale sont des paramètre importants.\nCarte-mère : composantes électroniques diverses Les circuits de la carte-mère sont très sensibles et le courant fourni par le bloc d’alimentation n’est pas toujours “propre” ni exactement conforme aux besoins de ces micro-circuits. Ainsi, la carte comprend des éléments qui servent à filtrer et régulariser le courant qu’elle distribue. Ces éléments sont de 4 types principalement:\nPièce Rôle Permet d’accumuler et régulariser le courant électrique Bobine d’arrêt (“Choke”) Filtrer le courant électrique Attenuer le courant électrique MOSFET Metal Oxide Semiconductor Field Effect Transistor, usages divers Chipset Ensemble de composantes électroniques interreliées permettant de contrôler l’échange de données entre les périphériques. L’architecture du chipset est dépendante de celle du CPU: donc lorsqu’on souhaite changer le CPU il est essentiel que celui-ci soit compatible avec le chipset de la carte.\nTraditionnellement, le chipset est divisé en 2 parties : Northbridge et Southbridge:\nNorthbridge est l’ensemble de circuits permettant la communication entre le CPU, la RAM, la carte graphique ou tout autre périphérique qui nécessite des performances élevées. Southbridge sert à gérer les communications entre Northbridge et les périphériques de performance moindre (USB, disques et réseau notamment). Depuis quelques années cependant, la plupart des fonctions de Northbridge sont incluses dans le CPU lui-même Socket et CPU Le CPU (Central Processing Unit) est le processeur principal du PC: il est chargé d’exécuter les instructions qui sont lancées par chacun des programmes qui roulent sur le PC. Sur la carte-mère, le socket est le boîtier qui permet de maintenir le CPU en place. Il relie chacun des points de contacts du CPU avec les points correspondants sur la carte-mère. Chaque socket est donc conçu spécifiquement pour certains types de CPU; la compatibilité entre les deux est essentielle.\nAttention, tous les processeurs d’une même génération ne sont pas nécessairement compatibles à un même socket: c’est plutôt la fréquence (en MHz) qui est déterminante. Quelques exemples:\nSocket Modèle de CPU Plage de fréquences 1366 Intel Core i7\nIntel Core i7 Extreme Edition\nIntel Xeon 2400 - 3200 MHz 1156 Intel Celeron Dual-Core\nIntel Core i3\nIntel Core i5\nIntel Core i7\nIntel Pentium Dual-Core\nIntel Xeon 1867 - 3600 MHz AM4 AMD A6, A8, A10 et A12\nAMD Ryzen (tous) 2800 - 4000 MHz Plus d’informations: RAM La RAM (Random Access Memory) permet de stocker les instructions des programmes qui s’exécutent sur le PC et les données que ces programmes utilisent. Elle correspond à la capacité de traitement des informations d’un PC: ce qui ne peut pas être mis en RAM faute de place devra être écrit sur le disque, et les opérations de lecture et écriture sur disque sont beaucoup plus lentes que celles dans la RAM. Ainsi, elle a un impact important sur les performances d’un PC.\nLa plupart des PC actuels utilisent des modules de mémoire DIMM (Dual Inline Memory Module) dont la taille (comptée en “pins”, qui est le nombre de points de contacts électroniques qu’elle contient) peut varier de 100 à 288 pins selon le type. Il existe aussi des modules SO-DIMM (260 pins) ou encore Micro-DIMM (172 pins, DDR2 seulement), qui sont plus petits que des modules DIMM habituels et sont utilisés dans des ordinateurs portables principalement.\nLa technologie utilisée pour transférer les données entre la carte-mère et le module de mémoire définit le type de la RAM. Aujourd’hui, le type le plus répandu et le plus performant est DDR4.\nEnfin, le dernier paramètre de la mémoire RAM est sa fréquence, qui se mesure en MHz. Ce nombre désigne le nombre d’opérations de lecture ou d’écriture à la seconde que la mémoire peut supporter (2600 MHz correspond à 2,6 milliards d’opérations à la seconde); mais attention, la limite de la carte-mère est déterminante: si celle-ci est limitée à 2133 MHz, un module de RAM de 2600 MHz sera limité à 2133 MHz.\nLa carte-mère définit aussi la limite de quantité de données qu’elle peut supporter: en effet, si la carte-mère est limitée à 32 Go de RAM, il est inutile d’ajouter de la RAM au-delà de 32 Go.\nATTENTION: Pour la mémoire DDR4, la plupart des cartes-mère peuvent s’ajuster à n’importe quelle configuration des modules RAM; cependant il est recommandé de se référer au manuel du fabricat car parfois certaines configurations permettent d’atteindre de meilleurs performances.\nPorts PCI-Express Les ports PCI (Peripheral Component Interconnect) sont des ports génériques qui servent à connecter différents types de périphériques. PCI-Express (ou PCIe) est une version évoluée de PCI, plus rapide et plus récente.\nÉtant donné que les périphériques PCIe peuvent être de nombreux types (cartes graphiques, interfaces réseau ou wifi, stockage NVMe), la quantité de données transmis par ces ports peuvent être variable, et donc leurs tailles peuvent être différentes. Il y a 4 tailles possibles: x1, x4, x8 et x16. Le standard PCIe permet cependant que des périphériques de petite taille soient utilisés dans les ports de taille plus grande.\nPorts SATA La norme SATA (Serial AT Attachment) est utilisée pour connecter des périphériques de stockage (disques et lecteurs DVD). Quoique très répandue, elle est relativement ancienne car elle date du début des années 2000, mais elle est le standard pour les disques durs à plateau. Dans le cas des disques “SSD”, le norme NVMe tend à la remplacer car elle permet de meilleures performances.\nIl peut y avoir plusieurs ports SATA sur une carte-mère. En général, on doit brancher le disque de démarrage sur le port SATA 0; mais il est possible de contourner cette obligation grâce à un paramètre de configuration dans le BIOS.\nConnecteurs USB Les ports USB (Universal Serial Bus), bien connus, servent à connecter une foule de périphériques différents. Leur utilité vient du fait qu’ils se configurent automatiquement, que les périphériques sont reconnus au moment de leur branchement (pas besoin de redémarrer le PC) et qu’ils permettent de transmettre du courant électrique de faible intensité.\nLa norme USB a beaucoup évolé depuis sa création: en conséquence il existe plusieurs types de connecteurs et de vitesses de transfert. Par exemple, entre USB-2 et USB-3, les taux de transferts sont passés de 480 Mbps à 5 Gbps (puis à 40 Gbps avec USB-4). Afin de distinguer les ports rapides des ports lents, on donne la couleur bleue aux ports USB-3.\nPorts PS/2 Cette norme remonte au milieu des années 1980: elle était utilisée pour connecter les claviers et les souris avant l’invention de USB.\nPort VGA Utilisée pour connecter les moniteurs avant l’apparition des connecteurs DVI.\nPort série Le port série (ici la spécification DE-9) est très ancien: il a initialement été conçu dans les années 1950! On le retrouve sur certaines cartes-mère car, malgré qu’il n’est pratiquement plus utilisé dans des périphériques grand public, il est très simple à utiliser et en conséquence peut être très utile pour des périphériques faits sur mesure, des prototypes, etc. On le retrouve aussi dans certaines composantes de réseaux informatiques comme des routeurs ou des commutateurs.\nRJ45 Le connecteur RJ45 est une prise utilisée pour connecter un ordinateur à un réseau filaire, comme Internet ou un réseau local. Il permet le transfert de données via un câble Ethernet.\nAutres composantes Cavaliers (“jumpers”) Les cavaliers sont des pièces amovibles de la carte-mère qui servent à connecter deux tiges de métal. On les utilise pour modifier des paramètres de configuration de la carte.\nInterrupteur CMOS Bouton utilisé pour réinitialiser la configuration du BIOS.\nPile La pile permet au PC de recevoir un minimum d’alimentation lorsqu’il est éteint ou débranché. Ceci lui permet de conserver son horloge interne et les données de configuration du BIOS. Donc, enlever la pile a pour effet de réinitialiser entièrement les paramètres du BIOS.\nÀ regarder Voir cette vidéo intéressante",
    "description": "La carte-mère d’un ordinateur est un circuit imprimé de taille relativement grande qui permet la communication entre les différents périphériques. Certains de ceux-ci peuvent être directement soudés sur elle, mais elle dispose de nombreux ports et emplacements permettant d’en ajouter d’autres selon nos besoins.\nFacteur de forme Les PC, serveurs et autres ordinateurs peuvent avoir différentes tailles; ainsi les dimensions d’une carte-mère sont déterminées par la taille et les proportions du boîtier. Ces tailles sont standardisées; en voici quelques unes parmi les plus courantes:",
    "tags": [],
    "title": "Carte Mère",
    "uri": "/113/materiel/carte-mere/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "Qu’est-ce que la virtualisation? En termes simples, la virtualisation permet d’exécuter un système d’exploitation (appelé invité) à l’intérieur d’un autre système d’exploitation (qu’on nomme hôte), comme on le ferait avec un programme “ordinaire”.\nLes systèmes d’exploitation (SE) sont, après tout, des logiciels à la base. Cependant ils se distinguent des logiciels ordinaires car ils servent (entre autres) à organiser l’utilisation des ressources matérielles d’un PC: par exemple, lorsque 3 applications ont besoin de lire des données sur le disque, c’est le SE qui leur donne accès à tour de rôle. Pour ce faire, les SE ont besoin d’avoir un accès direct aux ressources matérielles d’un PC. Mais lorsqu’on utilise un SE dans un contexte de virtualisation, c’est l’hôte qui a accès au matériel, pas l’invité.\nLes logiciels de virtualisation, comme VMWare Workstation mais aussi VirtualBox, Parallels (sur Mac) ou KVM (sur linux), servent à donner un accès “virtuel” aux ressources matérielles d’un système informatique: ainsi, les SE invités auront l’impression de parler directement aux composantes matérielles, mais en réalité elles parlent à des composantes matérielles virtualisées par le logiciel. Par exemple, le disque dur d’une machine virtuelle Windows invitée sera en réalité un fichier de 20 Go sur le système d’exploitation hôte.\nLes usages de la virtualisation sont très nombreux, par exemple:\nPartager les ressources matérielles d’un système afin des les utiliser à leur maximum (et diminuer les côuts) Tester des logiciels en les isolant du SE hôte Vérifier le fonctionnement d’un programme sur différentes plateformes Faciliter la maintenance des systèmes informatiques Gestion des machines virtuelles (VM) Dans ce qui suit on se penche sur les différentes fonctionnalités de VMWare Workstation.\nTout d’abord, pour démarrer une VM, il s’agit d’aller dans le menu VM -\u003e Power -\u003e Start Up Guest.\nIl y a plusieurs moyens d’arrêter une VM.\nMettre en pause: Stoppe l’exécution de tous les processus sur la VM, sans arrêter la VM. Il est impossible de fermer Workstation si des VM sont dans cet état. Suspendre: Met la VM en pause et sauvegarde son état matériel dans un fichier. Ceci permet de fermer Workstation pui de retrouver la VM dans le même état plus tard, lors d’une autre séance de travail. Éteindre (“Shut down”): Lance le processus d’extinction à partir du système d’exploitation de la VM. C’est la manière “propre” d’éteindre une VM. Couper l’alimentation (“Power off”): Arrête le SE de la VM sans passer par le processus normal d’extinction. Correspond à débrancher le câble d’un PC; ceci peut entraîner des pertes de données. Propriétés d’une VM Lors de la création de la VM, il est possible de définir plusieurs options, comme on l’a vu plus haut. Ces paramètres restent accessibles après la création de la VM. Pour ce faire on doit aller dans le menu VM -\u003e Settings (aussi accessible avec un clic-droit sur le nom de la VM dans le panneau de gauche). Ces paramètres peuvent être modifiés, mais pour ce faire il faut éteindre la VM.\nCe qu’on modifie ici sont les composantes matérielles virtualisées de la VM. Pour certaines composantes (par exemple les disques, les interfaces réseau, etc.) il est possible d’en ajouter ou d’en supprimer (boutons Add et Remove).\nMémoire ou mémoire vive Il est possible de spécifier très précisément la quantité de mémoire allouée à la VM. Attention cependant: si vous n’en allouez pas assez, la VM risque de mal fonctionner, et si vous en allouez trop c’est votre PC qui pourrait être affecté… La limite inférieure est généralement donnée dans les spécifications techniques du SE : par exemple, Debian recommande 2Go; Windows 11, 4Go; etc. Pour la limite supérieure, il est préférable de ne pas dépasser la quantité de RAM réelle de l’hôte.\nProcesseur On peut changer la configuration du processeur virtuel, plus précisément: le nombre de CPU virtuels et le nombre de coeurs par CPU.\nDisques Dans cette section on peut effectuer des opérations sur les disques virtuels. Ceux-ci correspondent en réalité à un fichier sur l’hôte ayant le même nom que la VM. Quatre tâches sont possibles:\nMonter: Connecter le disque sur le système hôte. Ceci est une manière d’accéder aux fichiers de la VM à partir de votre PC (mais il y en a d’autres plus simples). Défragmenter: La défragmentation est une opération qui permet d’améliorer les performances d’un disque. Attention, seuls les disques utilisés par les systèmes Windows bénéficient de la défragmentation. Étendre: Permet d’augmenter l’espace du disque virtuel. Ceci change uniquement la taille du fichier sur l’hôte: la VM n’utilisera pas automatiquement l’espace nouvellement disponible. Pour que ce soit le cas il faudra utiliser un éditeur de partition à l’intérieur de la VM. CD/DVD Ici on peut associer un fichier ISO au lecteur virtuel de la VM.\nAdaptateur réseau Permet de choisir le type de connexion au réseau de la VM (plus de détails dans la section Connexion au réseau).\nCarte son, Imprimante, Contrôleur USB Donne à la VM l’accès à ces périphériques sur l’hôte physique.\nAffichage Permet de définir la résolution de l’écran sur la VM et d’activer l’accélération graphique.\nConnexion au réseau Il y a 3 manières de connecter un réseau à une VM. Chacun a ses avantages et ses inconvénients et découle de ce qu’on veut faire avec la VM.\nHost-only: Un réseau virtuel, isolé du réseau sur lequel l’hôte est connecté, est créé par VMWare. La VM se connectera sur ce réseau virtuel: elle n’a donc pas accès à l’extérieur, mais s’il existe d’autre VM sur ce même réseau “Host-only”, elles pourront communiquer ensemble. NAT: Un réseau virtuel est créé mais cette fois-ci VMWare joue le rôle de passerelle sur ce réseau, ce qui permet aux VM d’accéder à l’extérieur (réseau local de l’hôte et plus). Bridged: L’interface réseau de l’hôte est partagée avec la VM, ce qui fait que celle-ci est connectée sur le même réseau que l’hôte. La VM apparaît donc comme un PC parmi d’autres sur le réseau local. Instantanés (“Snapshots”) Les instantanés permettent de sauvegarder l’état d’une VM à un moment spécifique afin de pouvoir y revenir ultérieurement. Ceci est utile lorsque des modifications qu’on apporte à la VM (par exemple, l’installation de logiciels ou de mises à jour) entraînent des problèmes: alors on n’a qu’à revenir à un instantané qui correspond à l’état de la VM avant l’installation.\nPour créer un instantané, on peut aller dans le menu VM -\u003e Snapshots -\u003e Take Snapshot. Il est possible de lui donner un nom et une courte description:\nPour gérer les instantanés, il faut aller dans le menu VM -\u003e Snapshots -\u003e Snapshot Manager. Ceci affiche la fenêtre suivante:\nIci on peut voir tous les instantanés qui existent pour cette VM. On peut revenir à un instantané précédent avec le bouton Go To, mais également les cloner ou les supprimer.\nLa fonction AutoProtect, lorsqu’elle est activée, permet d’automatiser la création d’instantanés: Workstation prendra alors un instantané chaque demi-heure, chaque heure ou chaque jour, selon l’intervalle qu’on a choisie.\nCloner une VM Lorsqu’on clone une VM, Workstation crée une nouvelle VM en tous points identique. Le clone peut être basé sur l’état actuel de la VM ou encore sur un instantané de la VM.\nIl existe deux types de clone: les clones liés et les clones complets.\nLes clones complets sont une copie conforme de la VM: au moment de la copie, les fichiers de la nouvelle VM auront la même taille que ceux de l’ancienne VM. Les clones liés demandent moins de ressources de stockage: dans les fichiers qui composent le clone lié, on ne conserve que la différence entre la VM originale et le clone. En contrepartie, les performances sont moins élevées qu’avec un clone complet () Exporter une VM Il est possible de distribuer une VM afin de la déployer dans un autre hyperviseur: le format OVF (Open Virtualization Format) est une norme de représentation des VM supportée par la plupart des hyperviseurs et qui permet en théorie différents hyperviseurs de s’échanger des VM (dans la réalité, ce n’est pas si simple…).\nPour exporter une VM, on doit aller dans File -\u003e Export to OVF et choisir le répertoire de destination.\nL’exportation crée plusieurs fichiers dont les extensions seront les suivantes:\n.mf: Le manifeste, qui contient les hachages des autres fichiers. Ces hachages permettent de vérifier s’ils sont en bon état. .ovf: Un fichier au format XML qui contient tous les paramètres de la VM. .vmdk: Le ou les fichiers qui contiennent les données du disque de la VM. Ce fichier est généralement assez volumineux. .iso: Si le lecteur CD/DVD de la VM contenait un fichier .iso, alors celui-ci sera inclus dans l’exportation. Pour importer une VM dans Workstation, il s’agit de double-cliquer sur le fichier .ovf pour l’ouvrir.\nAccès au BIOS VMWare Workstation donne accès à un BIOS virtuel qui permet de régler les paramètres habituels d’un BIOS (ordre d’amorçage, mot de passe de démarrage, date et heure, etc.)\nPour y accéder, allez au menu File -\u003e Power -\u003e Power On to Firmware\nExercices Créer un instantané(snapshot) et nommer le vieuxBackground Changer le fond d’écran(background) Revenir au snapshot vieuxBackground et confirmer que le fond d’écran est revenu au précédant.",
    "description": "Qu’est-ce que la virtualisation? En termes simples, la virtualisation permet d’exécuter un système d’exploitation (appelé invité) à l’intérieur d’un autre système d’exploitation (qu’on nomme hôte), comme on le ferait avec un programme “ordinaire”.\nLes systèmes d’exploitation (SE) sont, après tout, des logiciels à la base. Cependant ils se distinguent des logiciels ordinaires car ils servent (entre autres) à organiser l’utilisation des ressources matérielles d’un PC: par exemple, lorsque 3 applications ont besoin de lire des données sur le disque, c’est le SE qui leur donne accès à tour de rôle. Pour ce faire, les SE ont besoin d’avoir un accès direct aux ressources matérielles d’un PC. Mais lorsqu’on utilise un SE dans un contexte de virtualisation, c’est l’hôte qui a accès au matériel, pas l’invité.",
    "tags": [],
    "title": "Virtualisation",
    "uri": "/113/virtualisation/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "Source :\nDifférent système d’exploitation connus:\nWindows macOS Unix Linux Chrome OS Android iOS Responsabilité: Exécution et ordonnacement des programmes\nCommunication entre programmes\nGestion des droits et accès\nGestion des ressources matériel de l’ordinateur\nGestion des périphériques\nManipulation des systèmes de fichiers\nGestion du réseau\nExécution et ordonnancement des programmes Le système d’exploitation est responsable de l’exécution des programmes en assignant des ressources CPU (unité centrale de traitement) aux tâches en cours d’exécution. Il gère également l’ordonnancement des processus pour garantir une utilisation efficace du CPU.\nGestion des droits et accès Il contrôle les droits d’accès aux ressources du système, tels que les fichiers et les répertoires, en attribuant des autorisations aux utilisateurs et aux groupes. Il s’assure que les utilisateurs n’ont accès qu’aux ressources pour lesquelles ils sont autorisés.\nGestion des ressources matérielles de l’ordinateur Le système d’exploitation gère les ressources matérielles de l’ordinateur, y compris la mémoire, le processeur, le stockage et les périphériques, en les allouant de manière efficace aux processus en cours d’exécution.\nGestion des périphériques Il prend en charge la gestion des périphériques, tels que les disques durs, les imprimantes, les claviers, les souris, etc. Il assure la communication entre les programmes et les périphériques, ainsi que la gestion des pilotes de périphérique.\nManipulation des systèmes de fichiers Le système d’exploitation gère la création, la lecture, l’écriture, la suppression et la manipulation des fichiers et des répertoires.\nImage ISO Une image ISO est une représentation numérique complète et exacte d’un disque optique, tel qu’un CD, un DVD ou un disque Blu-ray. Le terme “ISO” provient du format de fichier standardisé utilisé pour stocker cette image, qui est généralement une extension “.iso”. Les images ISO sont largement utilisées pour distribuer des logiciels, des systèmes d’exploitation et d’autres données sous forme de fichiers informatiques faciles à copier, à stocker et à transférer.\nMémoire Virtuelle La mémoire virtuelle est un mécanisme couramment utilisé dans les systèmes d’exploitation modernes pour simuler la disponibilité de plus de mémoire centrale que ce qui est réellement disponible. Elle permet l’exécution simultanée de plusieurs programmes en stockant une partie de leurs données dans une mémoire de masse plus grande mais plus lente. Les programmes disposent d’espaces virtuels de mémoire, et lorsque leur accès à des données est nécessaire, l’unité de gestion mémoire traduit les adresses virtuelles en adresses physiques. En cas de manque de mémoire centrale, le système d’exploitation effectue automatiquement des opérations d’échange pour transférer les données entre la mémoire centrale et la mémoire de masse, sans que les programmes en aient conscience\nHachage Sert à vérifier rapidement que le fichier télécharger n’est pas corrompu. Si l’on fait le moindre changement au fichier source, la fonction de hachage change drastiquement. Il y a très peu de chance qu’un fichier différent tombe sur le même résultat. Une même entrée donnera toujours la même sortie.\nTélécharger ubuntu depuis l’adresse suivante : Déplacer le dans un dossier nommé ISO dans votre dossier document.\nClick droit sur le fichier.\npropriété » Sécurité\nCopier le chemin absolu\nouvrir l’invite de commande: windows + taper « invite de commande »\nentrez la commande certutil -hashfile « VOTRE CHEMIN » SHA256\nVérifier que ça donne bien :\na435f6f393dda581172490eda9f683c32e495158a780b5a1de422ee77d98e909\nSystème de fichiers FAT12, FAT16, FAT32 FAT : File allocation table\nLa table qui suit contient des chiffres qui peuvent varier dans la pratique.\nAllez voir la vidéo source pour plus d’info : Taille fichier maximum Taille volume maximum FAT12 32MB 32MB FAT16 4GB 16GB FAT32 4GB 32GB/2TB/16TB Compatible avec beaucoup d’OS dont Windows, macOS et Linux\nNew technology file system(NTFS) Avantage :\nVolume et taille de fichier presque infini(16 EB ou 16 000 000 000 000 000 000 bytes ou 16 milliard de GB)\nSystème de journalisation\nSupporte les permissions et la cryptographie\nDésavantage:\nPas très compatible avec les OS. Obligatoire pour windows, mais pas ROM pour macOS et certaines ancienne distribution de Linux, exFAT Amélioration de FAT.\nTaille maximum de fichier de 16 EB\nOptimal pour les mémoires de hautes capacités(plus de 32GB)\next2,ext3,ext4 ext3 et ext4 : ont de la journalisation\next4: Taille de 16TB et volume de 1EB.\nPas supporté sur les autres OS. Conçu pour les produits Linux.\nHFS, HFS+ \u0026 APFS HFS+ : apport de journalisation\nAPFS : optimiser pour SSD.\nPas de supporté sur les autres OS. Conçu pour les produits apples.\nRAID (Redundant array of Independent Disks) Écouter le vidéo:",
    "description": "Source :\nDifférent système d’exploitation connus:\nWindows macOS Unix Linux Chrome OS Android iOS Responsabilité: Exécution et ordonnacement des programmes\nCommunication entre programmes\nGestion des droits et accès\nGestion des ressources matériel de l’ordinateur\nGestion des périphériques\nManipulation des systèmes de fichiers\nGestion du réseau\nExécution et ordonnancement des programmes Le système d’exploitation est responsable de l’exécution des programmes en assignant des ressources CPU (unité centrale de traitement) aux tâches en cours d’exécution. Il gère également l’ordonnancement des processus pour garantir une utilisation efficace du CPU.",
    "tags": [],
    "title": "Système Exploitation",
    "uri": "/113/systeme-exploitation/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "Linux est une famille de systèmes d’exploitation qui se caractérisent par le fait qu’ils utilisent tous le même .\nLe noyau linux a été développé en 1991 sous une licence libre (“open-source”), ce qui signifie que tout le code est gratuit et disponible au public. Ceci a eu pour effet qu’il a rapidement été utilisé par des entreprises ou des particuliers qui souhaitaient développer leur propre SE, expérimenter, etc. De nombreux groupes d’utilisateurs se sont rapidement formés pour créer des systèmes d’exploitation plus complets utilisant le noyau linux: on nomme distributions ces différentes “saveurs” de linux.\nQuelques exemples de distributions utilisant linux ou une version modifiée du noyau linux:\nDebian Android SteamOS Raspberry Pi OS WebOS (utilisée dans les téléviseurs LG) Distributions Une distribution linux est un système d’exploitation basé sur le noyau linux. Chacun de ces SE peut contenir des programmes différents (à l’exception du noyau…). Les distributions se différencient donc par leur apparence, la manière dont on peut y installer des logiciels, etc.\nÉtant donné que chacun est libre de créer des nouvelles distributions, celles-ci sont très nombreuses. Il n’existe pas de statistiques officielles sur le sujet mais on peut affirmer qu’il existe plusieurs milliers de distributions linux.\nÉvidemment, certaines distributions sont plus populaires que d’autres; aussi, la plupart des distributions sont construites à partir d’une distribution existante. Ainsi, il existe des grandes familles (des groupes de distributions toutes basées sur un même parent). Les principales:\nDebian Red Hat SUSE Arch Gentoo À VOIR: S’orienter dans linux Invite de commandes Sur la ligne de commande du terminal Debian, avant même d’avoir écrit quoi que ce soit, on peut déjà voir des informations utiles:\nleon@debian:~$ On appelle cette chaîne de caractères l’invite de commandes. Elle contient les informations suivantes:\nNom de l’utilisateur courant Nom de l’ordinateur (aussi appelé hostname) Répertoire courant (~ désigne le répertoire personnel) Hiérarchie du système de fichiers En linux vous êtes toujours dans un répertoire: Le système de fichiers est composé de fichiers et de répertoires qui forment une hiérarchie: dans le schéma ci-dessus (qui contient seulement une partie des fichiers et répertoires dans linux), les répertoires sont en blanc et les fichiers en bleu. On nomme racine le sommet de cette hiérarchie; en linux elle est désignée par /.\nChemins absolus et relatifs Un fichier ou un répertoire peut être désigné de deux manières: son chemin absolu ou son chemin relatif.\nLe chemin absolu est le nom du fichier ou du répertoire précédé de tous ses parents jusqu’à la racine. Le chemin relatif est le nom du fichier sans celui de ses parents, et n’est valide que dans le contexte du répertoire courant (celui où on se trouve). Par exemple, pour le fichier /var/log/messages, son chemin relatif à partir du répertoire /var sera log/messages, et à partir de /var/log son chemin relatif sera messages.\nATTENTION!: Remarquez le caractère /. Il est toujours présent dans un chemin absolu et toujours absent dans un chemin relatif.\nRaccourcis Aussi, on peut utiliser deux raccourcis pour désigner des répertoires en linux:\n. pour le répertoire courant .. pour le répertoire parent ~ pour le répertoire personnel Par exemple, si on se trouve dans le répertoire /usr/bin:\n.. est égal à /usr . est égal à /usr/bin ./gzip est égal à /usr/bin/gzip ../share/gcc est égal à /usr/share/gcc ~ est égal à /home/UTIL, où “UTIL” est le nom de l’utilisateur connecté. Commandes utiles But Commande Signification Savoir où vous êtes pwd Present Working Directory Changer de répertoire cd Change Directory Voir le contenu d’un répertoire ls List contentS Voir le contenu d’un fichier cat conCATenate Connaître le type d’un fichier file Pour plus d’informations sur une commande, affichez son manuel d’utilisation en lançant man suivi du nom de la commande, par exemple:\nleon@debian:~$ man ls pwd Affiche le chemin complet du répertoire courant.\nExemple\nleon@debian:~$ pwd ls Affiche le contenu d’un répertoire. L’argument de la commande est le chemin de ce répertoire.\nLa commande ls a plusieurs options; les principales sont:\n-l montre une liste détaillée -a montre les fichiers cachés On peut combiner ces options : ls -la\nExemples\nleon@debian:~$ ls Téléchargements leon@debian:~$ ls -l /etc leon@debian:~$ ls -al . cd Change le répertoire courant. L’argument de la commande est le répertoire où on veut aller.\nSi on ne donne aucun argument, on se retrouve dans notre répertoire personnel.\nSi on donne - comme argument on ira dans le dernier répertoire où on était.\nExemples\nleon@debian:~$ cd /etc/init.d leon@debian:/etc/init.d$ cd .. leon@debian:/etc$ cd - leon@debian:/etc/init.d$ cd leon@debian:~$ file Affiche des informations sur le type d’un fichier. L’argument est le fichier dont on veut avoir des informations.\nExemples\nleon@debian:~$ file /etc/hosts leon@debian:/usr/bin$ file xxd cat Affiche à l’écran le contenu d’un fichier. L’argument est le fichier dont on veut afficher le contenu. Exemples\nleon@debian:~$ cat /etc/hosts leon@debian:~$ cat .bashrc Modifier le système de fichiers Il est possible de créer, supprimer, copier ou déplacer des fichiers et des répertoires.\nCommandes utiles But Commande Signification Créer un répertoire mkdir MaKe DIRectory Supprimer un répertoire rmdir ReMove DIRectory Créer un fichier touch Supprimer un fichier rm ReMove Copier un fichier cp CoPy Déplacer un fichier mv MoVe Créer un raccourci ln LiNk touch Crée un fichier vide. L’argument de la commande est le chemin du fichier.\nExemple:\nleon@debian:~$ touch unfichier.txt mkdir Crée un répertoire. L’argument de la commande est le chemin du répertoire cible.\nLorsque la cible contient plus d’un répertoire, tous les répertoires dans le chemin sauf le dernier doivent déjà exister (un seul répertoire est créé à la fois). Si on veut créer toute une série de répertoires et de sous-répertoires il faut utiliser l’option -p.\nExemples:\nleon@debian:~$ mkdir unrep leon@debian:~$ mkdir /home/leon/unrep/sousrep leon@debian:~$ mkdir -p /home/leon/rep2/rep3/rep4 rmdir Supprime un répertoire. L’argument est le chemin du répertoire à supprimer.\nSi le répertoire à supprimer n’est pas vide, il ne sera pas supprimé.\nExemple:\nleon@debian:~$ rmdir unrep rm Supprime des fichiers ou des répertoires. L’argument peut être le fichier ou (dans certains cas) le répertoire à supprimer.\nLa commande rm a plusieurs options; les principales sont:\n-f force la suppression sans demander de confirmation -r supprime récursivement les fichiers et sous-répertoires. Lorsqu’on utilise cette option l’argument de rm doit être un réperoire. Exemples:\nleon@debian:~$ rm /home/leon/unfichier.txt leon@debian:~$ rm -r rep2 cp Copie un ou plusieurs fichiers. Le premier argument est la source et le deuxième est la cible.\nLa commande cp a plusieurs options; les principales sont:\n-f force la copie sans demander de confirmation -r copie récursivement les fichiers et sous-répertoires La copie est une action qui concerne les fichiers, mais la source et la cible passés en arguments à la commande peuvent être des fichiers ou des répertoires. La commande cp se comporte différemment selon les cas:\nSi la source est un fichier et la cible est un répertoire, le fichier sera créé dans le répertoire cible Si la source est un répertoire, on doit utiliser l’option -r pour copier son contenu Si la cible existe, son contenu sera écrasé Exemples:\nleon@debian:~$ cp abc def leon@debian:~$ cp /usr/share/dict/french . leon@debian:~$ cp abc rep1/ leon@debian:~$ cp -r rep1/ rep2/ mv Déplace un ou plusieurs fichiers. Le premier argument est la source et le deuxième est la cible.\nLa commande mv fonctionne comme cp, à quelques exceptions près:\nmv supprime l’original après que la copie ait été faite. Pour cette raison, on utilise souvent la commande mv pour renommer un fichier: il s’agit de le déplacer dans le même répertoire que la source en lui donnant un autre nom. L’option -r n’est pas utilisée q Exemples: leon@debian:~$ mv abc /tmp/abc leon@debian:~$ mv abc def leon@debian:~$ mv -r rep1/ rep2/ ln Crée un raccourci (un lien) vers une cible, qui peut être fichier ou un répertoire. Avec un seul argument (ln CIBLE), le lien est créé dans le répertoire courant; pour créer le lien ailleurs, on doit donner son nom comme deuxième argument (ln CIBLE LIEN).\nIl existe deux types de liens: physique et symbolique:\nLes liens physiques sont des noms de fichiers qui pointent sur l’espace disque où l’original est stocké. Tous les liens physiques vers un fichier doivent être supprimés pour qu’un fichier soit supprimé. Les liens symboliques sont des noms de fichiers qui pointent sur d’autres noms de fichiers. Si la cible est supprimée, le lien existera toujours mais ne fonctionnera plus. Il est préférable d’utiliser des liens symboliques. Pour cela la commande ln doit être lancée avec l’option -s.\nExemples:\nleon@debian:~$ ln -s /etc/ leon@debian:~$ ln -s /etc/hostname leon@debian:~$ ln -s /etc/hostname nomHote Caractères génériques Dexu caractères spéciaux peuvent être utilisés lorsqu’on désigne un fichier: * et ?. Il permettent de remplacer des caractères dans les noms de fichiers ou de répertoires.\n? remplace n’importe quel caractère unique; * remplace n’importe quel groupe de caractères. Exemples:\nleon@debian:~$ cp dir1/* . leon@debian:~$ mv f* dir2/ leon@debian:~$ cp f4 dir?",
    "description": "Linux est une famille de systèmes d’exploitation qui se caractérisent par le fait qu’ils utilisent tous le même .\nLe noyau linux a été développé en 1991 sous une licence libre (“open-source”), ce qui signifie que tout le code est gratuit et disponible au public. Ceci a eu pour effet qu’il a rapidement été utilisé par des entreprises ou des particuliers qui souhaitaient développer leur propre SE, expérimenter, etc. De nombreux groupes d’utilisateurs se sont rapidement formés pour créer des systèmes d’exploitation plus complets utilisant le noyau linux: on nomme distributions ces différentes “saveurs” de linux.",
    "tags": [],
    "title": "Linux",
    "uri": "/113/orientation/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "Introduction à Bash et au Scripting Dans le monde des systèmes Unix et Linux, Bash (Bourne Again SHell) est l’un des interpréteurs de commandes les plus utilisés. Il permet aux utilisateurs d’interagir avec le système d’exploitation via une interface en ligne de commande, mais surtout, il offre la possibilité d’automatiser des tâches grâce à l’écriture de scripts.\nUn script Bash est simplement un fichier contenant une suite de commandes que le système exécutera de manière séquentielle. Il s’agit d’un outil puissant pour gagner du temps, éviter les erreurs humaines et effectuer des traitements complexes de manière automatisée.\nCe chapitre sera divisé en deux grandes parties :\n🔹 Partie 1 – Premiers pas avec les scripts Dans cette première partie, nous allons découvrir les bases du scripting :\ncomment créer un fichier de script, y regrouper des commandes simples, et utiliser les arguments pour rendre les scripts plus dynamiques et réutilisables. Aucune logique conditionnelle ou boucle ici : l’objectif est de comprendre comment regrouper des commandes pour simplifier leur exécution.\n🔹 Partie 2 – Vers l’automatisation La seconde partie introduira les structures de contrôle (conditions, boucles, etc.) qui transforment un simple regroupement de commandes en scripts réellement intelligents et automatisés. On y apprendra à rendre nos scripts capables de prendre des décisions et de réagir à des situations variées.",
    "description": "Introduction à Bash et au Scripting Dans le monde des systèmes Unix et Linux, Bash (Bourne Again SHell) est l’un des interpréteurs de commandes les plus utilisés. Il permet aux utilisateurs d’interagir avec le système d’exploitation via une interface en ligne de commande, mais surtout, il offre la possibilité d’automatiser des tâches grâce à l’écriture de scripts.\nUn script Bash est simplement un fichier contenant une suite de commandes que le système exécutera de manière séquentielle. Il s’agit d’un outil puissant pour gagner du temps, éviter les erreurs humaines et effectuer des traitements complexes de manière automatisée.",
    "tags": [],
    "title": "Bash",
    "uri": "/113/bash/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/113/categories/index.html"
  },
  {
    "breadcrumb": "420113 - Notes",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/113/tags/index.html"
  }
]
